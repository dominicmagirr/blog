mean(ci_mat_1[,2] < 0)
set.seed(101)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 700 - exp(-x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(-x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
set.seed(201)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 700 - exp(-x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(-x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
set.seed(301)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 700 - exp(-x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(-x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(-2 * x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(-0.5 * x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 700 - exp(-x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 700 - exp(-x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
y_ex <- rnorm(600,
mean = 700 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
y_ex <- rnorm(600,
mean = 800 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
y_ex <- rnorm(600,
mean = 900 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 700 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
mean(ci_mat_1[,1] > 0)
mean(ci_mat_1[,2] < 0)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 900 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
sim_1_random <- function(dummy = 0){
x <- rnorm(600)
y <- rnorm(600,
mean = 900 - exp(x + 4),
sd = 60)
dat <- data.frame(y = y, x = x, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_r_list <- purrr::map(rep(0,1000), sim_1_random)
ci_r_mat <- do.call(rbind, ci_r_list)
# check coverage
mean(ci_r_mat[,1] < 0 & ci_mat[,2] > 0)
sim_1_random <- function(dummy = 0){
x <- rnorm(600)
y <- rnorm(600,
mean = 900 - exp(x + 4),
sd = 60)
dat <- data.frame(y = y, x = x, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_r_list <- purrr::map(rep(0,1000), sim_1_random)
ci_r_mat <- do.call(rbind, ci_r_list)
# check coverage
mean(ci_r_mat[,1] < 0 & ci_r_mat[,2] > 0)
# % of time CI is entirely above 0
mean(ci_r_mat[,1] > 0)
# % of time CI is entirely below 0
mean(ci_r_mat[,2] < 0)
#set.seed(302)
set.seed(303)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 900 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 900 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
#set.seed(302)
set.seed(304)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
plot(factor(a_fixed), x_fixed_1,
xlab = "Treatment",
ylab = "X")
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed_1 <- rbinom(600, 1, 0.5)
plot(factor(a_fixed_1), x_fixed_1,
xlab = "Treatment",
ylab = "X")
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed_1 <- rbinom(600, 1, 0.5)
plot(factor(a_fixed_1), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 900 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed == 0], y_ex[a_fixed == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed == 1], y_ex[a_fixed == 1],
col = 2)
sim_1_fixed <- function(dummy = 0, x_fixed){
y <- rnorm(600,
mean = 900 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed, x_fixed = x_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed_1 <- rbinom(600, 1, 0.5)
plot(factor(a_fixed_1), x_fixed_1,
xlab = "Treatment",
ylab = "X")
y_ex <- rnorm(600,
mean = 900 - exp(x_fixed_1 + 4),
sd = 60)
plot(x_fixed_1[a_fixed_1 == 0], y_ex[a_fixed_1 == 0],
xlab = "X",
ylab = "Y")
points(x_fixed_1[a_fixed_1 == 1], y_ex[a_fixed_1 == 1],
col = 2)
sim_1_fixed <- function(dummy = 0,
x_fixed,
a_fixed){
y <- rnorm(600,
mean = 900 - exp(x_fixed + 4),
sd = 60)
dat <- data.frame(y = y, x = x_fixed, a = a_fixed)
fit <- lm(y ~ a + x, data = dat)
ci <- confint(fit)["a",]
}
ci_list_1 <- purrr::map(rep(0,1000), sim_1_fixed,
x_fixed = x_fixed_1,
a_fixed = a_fixed_1)
ci_mat_1 <- do.call(rbind, ci_list_1)
# check coverage
mean(ci_mat_1[,1] < 0 & ci_mat_1[,2] > 0)
set.seed(303)
x_fixed_2 <- rnorm(600)
a_fixed_2 <- rbinom(600, 1, 0.5)
ci_list_2 <- purrr::map(rep(0,1000), sim_2_fixed,
x_fixed = x_fixed_2,
a_fixed = a_fixed_2)
set.seed(303)
x_fixed_2 <- rnorm(600)
a_fixed_2 <- rbinom(600, 1, 0.5)
ci_list_2 <- purrr::map(rep(0,1000), sim_1_fixed,
x_fixed = x_fixed_2,
a_fixed = a_fixed_2)
ci_mat_2 <- do.call(rbind, ci_list_2)
# check coverage
mean(ci_mat_2[,1] < 0 & ci_mat_2[,2] > 0)
set.seed(303)
x_fixed_2 <- rnorm(600)
a_fixed_2 <- rbinom(600, 1, 0.5)
ci_list_2 <- purrr::map(rep(0,1000), sim_1_fixed,
x_fixed = x_fixed_2,
a_fixed = a_fixed_1)
ci_mat_2 <- do.call(rbind, ci_list_2)
# check coverage
mean(ci_mat_2[,1] < 0 & ci_mat_2[,2] > 0)
set.seed(303)
x_fixed_2 <- rnorm(600)
ci_list_2 <- purrr::map(rep(0,1000), sim_1_fixed,
x_fixed = x_fixed_2,
a_fixed = a_fixed_1)
ci_mat_2 <- do.call(rbind, ci_list_2)
# check coverage
mean(ci_mat_2[,1] < 0 & ci_mat_2[,2] > 0)
?summary
knitr::opts_chunk$set(echo = TRUE)
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
summary(x_fixed_1[a_fixed == 1])
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
rbind(summary(x_fixed_1[a_fixed == 1]),
summary(x_fixed_1[a_fixed == 0]))
c("trt" = 1, summary(x_fixed_1[a_fixed == 1]))
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
rbind(c("trt" = "1", summary(x_fixed_1[a_fixed == 1])),
c("trt" = "0", summary(x_fixed_1[a_fixed == 0])))
#set.seed(304)
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed <- rbinom(600, 1, 0.5)
rbind(c("trt" = 1, summary(x_fixed_1[a_fixed == 1])),
c("trt" = 0, summary(x_fixed_1[a_fixed == 0])))
set.seed(302)
x_fixed_1 <- rnorm(600)
a_fixed_1 <- rbinom(600, 1, 0.5)
plot(factor(a_fixed_1), x_fixed_1,
xlab = "Treatment",
ylab = "X")
pbinom(220, 500, 0.5)
pbinom(230, 500, 0.5)
install.packages("mvtnorm")
---
title: "Simulate from a Normal-inverse-Wishart distribution"
dbinom(19, 50, 0.5) / pbinom(19, 50, 0.5)
dbinom(18, 50, 0.5) / pbinom(19, 50, 0.5)
dbinom(17, 50, 0.5) / pbinom(19, 50, 0.5)
dbinom(19, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(18, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(15, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(14, 30, 0.5) / pbinom(19, 30, 0.5)
pbinom(19, 30, 0.5)
dbinom(10, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(11, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(12, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(13, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(14, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(10, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(11, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(12, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(13, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(14, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(15, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(16, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(17, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(18, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(19, 30, 0.5) / pbinom(19, 30, 0.5)
(pbinom(19, 30, 0.5) - pbinom(9, 30, 0.5))/ pbinom(19, 30, 0.5)
dbinom(19, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(19, 50, 0.5) / pbinom(19, 50, 0.5)
dbinom(19, 30, 0.5) / pbinom(19, 30, 0.5)
dbinom(19, 30, 0.4) / pbinom(19, 30, 0.4)
dbinom(19, 50, 0.5) / pbinom(19, 50, 0.5)
dbinom(19, 50, 0.4) / pbinom(19, 50, 0.4)
(dbinom(19, 30, 0.5) / pbinom(19, 30, 0.5)) / (dbinom(19, 30, 0.4) / pbinom(19, 30, 0.4))
s
(dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
s <- 19
n <- 30
p_1 <- 0.5
p_2 <- 0.4
(dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
s <- 19
n <- 30:50
p_1 <- 0.5
p_2 <- 0.4
(dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
s <- 19
n <- 19:50
p_1 <- 0.5
p_2 <- 0.4
(dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
pbinom(s,n,p_2)
1 - pbinom(s,n,p_2)
p_event_2 <- 1 - pbinom(s,n,p_2)
hr <- (dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
plot(p_event_2, hr)
plot(19:50, p_event_2)
points(19:50, hr / 10)
plot(p_event_2, hr)
plot(19:50, p_event_2, type = 'l', ylim = c(0,7))
points(19:50, hr / 10)
points(19:50, hr / 10, type = 'l', col = 2)
plot((19:50)[-(1:10)], p_event_2[-(1:10)], type = 'l', ylim = c(0,7))
points((19:50)[-(1:10)], (hr / 10)[-(1:10)], type = 'l', col = 2)
plot((19:50)[-(1:10)], p_event_2[-(1:10)], type = 'l', ylim = c(0,1.2))
points((19:50)[-(1:10)], (hr / 10)[-(1:10)], type = 'l', col = 2)
s <- 19
n <- 19:80
p_1 <- 0.5
p_2 <- 0.4
p_event_2 <- 1 - pbinom(s,n,p_2)
hr <- (dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
plot((19:80)[-(1:10)], p_event_2[-(1:10)], type = 'l', ylim = c(0,1.2))
points((19:80)[-(1:10)], (hr / 10)[-(1:10)], type = 'l', col = 2)
dbinom(19, 50, 0.5) / pbinom(19, 50, 0.5)
s <- 19
n <- 190:800
p_1 <- 0.05
p_2 <- 0.04
p_event_2 <- 1 - pbinom(s,n,p_2)
hr <- (dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
plot(190:800, hr)
plot(190:800, p_event_2)
plot(190:800, p_event_2)
plot(190:800, hr)
plot(190:800, p_event_2)
plot(190:800, hr)
plot(190:800, p_event_2, xlim = c(350, 800))
plot(190:800, hr, xlim = c(350, 800))
plot(190:800, hr, xlim = c(350, 800), ylim = c(1,3))
s <- 19
n <- 1900:8000
p_1 <- 0.005
p_2 <- 0.004
p_event_2 <- 1 - pbinom(s,n,p_2)
hr <- (dbinom(s, n, p_1) / pbinom(s, n, p_1)) / (dbinom(s, n, p_2) / pbinom(s, n, p_2))
plot(1900:8000, p_event_2, xlim = c(3500, 8000))
plot(1900:8000, hr, xlim = c(3500, 8000))
install.packages("vitae")
install.packages("vitae")
tinytex::install_tinytex()
